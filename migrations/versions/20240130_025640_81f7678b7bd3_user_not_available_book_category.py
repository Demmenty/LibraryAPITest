"""book models

Revision ID: 81f7678b7bd3
Revises: 36c9591c8915
Create Date: 2024-01-30 02:56:40.960093

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = '81f7678b7bd3'
down_revision: Union[str, None] = '36c9591c8915'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('author',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('author_pkey'))
    )
    op.create_index(op.f('author_id_idx'), 'author', ['id'], unique=False)
    op.create_index(op.f('author_name_idx'), 'author', ['name'], unique=False)
    op.create_table('book',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('language', sa.String(), nullable=True),
    sa.Column('publication_date', sa.String(), nullable=True),
    sa.Column('isbn', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('book_pkey'))
    )
    op.create_index(op.f('book_id_idx'), 'book', ['id'], unique=False)
    op.create_index(op.f('book_isbn_idx'), 'book', ['isbn'], unique=False)
    op.create_index(op.f('book_language_idx'), 'book', ['language'], unique=False)
    op.create_index(op.f('book_publication_date_idx'), 'book', ['publication_date'], unique=False)
    op.create_index(op.f('book_title_idx'), 'book', ['title'], unique=False)
    op.create_table('category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('category_pkey'))
    )
    op.create_index(op.f('category_id_idx'), 'category', ['id'], unique=False)
    op.create_index(op.f('category_name_idx'), 'category', ['name'], unique=False)
    op.create_table('book_author',
    sa.Column('book_id', sa.Integer(), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['author.id'], name=op.f('book_author_author_id_fkey')),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], name=op.f('book_author_book_id_fkey'))
    )
    op.create_table('book_category',
    sa.Column('book_id', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], name=op.f('book_category_book_id_fkey')),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], name=op.f('book_category_category_id_fkey'))
    )
    op.create_table('user_unavailable_book_category',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], name=op.f('user_unavailable_book_category_category_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('user_unavailable_book_category_user_id_fkey'), ondelete='CASCADE')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_unavailable_book_category')
    op.drop_table('book_category')
    op.drop_table('book_author')
    op.drop_index(op.f('category_name_idx'), table_name='category')
    op.drop_index(op.f('category_id_idx'), table_name='category')
    op.drop_table('category')
    op.drop_index(op.f('book_title_idx'), table_name='book')
    op.drop_index(op.f('book_publication_date_idx'), table_name='book')
    op.drop_index(op.f('book_language_idx'), table_name='book')
    op.drop_index(op.f('book_isbn_idx'), table_name='book')
    op.drop_index(op.f('book_id_idx'), table_name='book')
    op.drop_table('book')
    op.drop_index(op.f('author_name_idx'), table_name='author')
    op.drop_index(op.f('author_id_idx'), table_name='author')
    op.drop_table('author')
    # ### end Alembic commands ###
